version: '2'

services:

  hafenkran-db:
    image: "postgres:12.0"
    container_name: "hafenkran-db"
    environment:
      - POSTGRES_USER=hafenkran
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=hafenkran
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data

  hafenkran-userservice:
    container_name: hafenkran-userservice
    build:
      context: ./hafenkran-userservice
      dockerfile: Dockerfile.userservice
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://hafenkran-db:5432/hafenkran
    depends_on:
      - hafenkran-db

  hafenkran-clusterservice:
    container_name: hafenkran-clusterservice
    build:
      context: ./hafenkran-clusterservice
      dockerfile: Dockerfile.clusterservice
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://hafenkran-db:5432/hafenkran
      - MOCKKUBERNETESCLIENT=true
      - DOCKERCLIENT_CERTPATH=
      - DOCKERCLIENT_HOST=tcp://hafenkran-dind:2375
    depends_on:
      - hafenkran-db
      - hafenkran-dind

  hafenkran-reportingservice:
    container_name: hafenkran-reportingservice
    build:
      context: ./hafenkran-reportingservice
      dockerfile: Dockerfile.reportingservice
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://hafenkran-db:5432/hafenkran
      - CLUSTERSERVICE_PATH=http://hafenkran-clusterservice:8082
    depends_on:
      - hafenkran-db

  hafenkran-dind:
    container_name: hafenkran-dind
    image: docker:18.09.9-dind
    ports:
      - "2375:2375"
      - "2376:2376"
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=
      - DOCKER_DRIVER=overlay2

volumes:
  db-data: {}
