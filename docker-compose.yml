version: '2'

services:

  hafenkran-db:
    image: "postgres:12.0"
    container_name: "hafenkran-db"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  hafenkran-userservice:
    container_name: hafenkran-userservice
    build:
      context: ./hafenkran-userservice
      dockerfile: Dockerfile.userservice
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
    depends_on:
      - hafenkran-db

  hafenkran-clusterservice:
    container_name: hafenkran-clusterservice
    build:
      context: ./hafenkran-clusterservice
      dockerfile: Dockerfile.clusterservice
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - MOCKKUBERNETESCLIENT=false
      - DOCKERCLIENT_CERTPATH=
      - DOCKERCLIENT_HOST=${DOCKERCLIENT_HOST}
      - USER-SERVICE-URI=${USER-SERVICE-URI}
      - CLUSTER-SERVICE-URI=${CLUSTER-SERVICE-URI}
      - REPORTING-SERVICE-URI=${REPORTING-SERVICE-URI}
    depends_on:
      - hafenkran-db
      - hafenkran-dind

  hafenkran-reportingservice:
    container_name: hafenkran-reportingservice
    build:
      context: ./hafenkran-reportingservice
      dockerfile: Dockerfile.reportingservice
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - USER-SERVICE-URI=${USER-SERVICE-URI}
      - CLUSTER-SERVICE-URI=${CLUSTER-SERVICE-URI}
      - REPORTING-SERVICE-URI=${REPORTING-SERVICE-URI}
    depends_on:
      - hafenkran-db

  hafenkran-dind:
    container_name: hafenkran-dind
    image: docker:18.09.9-dind
    ports:
      - "2375:2375"
      - "2376:2376"
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=
      - DOCKER_DRIVER=overlay2

  hafenkran-client:
    container_name: hafenkran-client
    build:
      context: ./hafenkran-client
      dockerfile: Dockerfile.client
    ports:
      - "8080:8080"
    environment:
      - USER_SERVICE_URL=${USER-SERVICE-URI}
      - CLUSTER_SERVICE_URL=${CLUSTER-SERVICE-URI}
      - REPORTING_SERVICE_URL=${REPORTING-SERVICE-URI}
  
  hafenkran-proxy:
    container_name: hafenkran-proxy
    hostname: hafenkran
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - hafenkran-client
      - hafenkran-userservice
      - hafenkran-clusterservice
      - hafenkran-reportingservice

volumes:
  db-data: {}
